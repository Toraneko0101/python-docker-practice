name: Pull-request trigger
# 特定のタグがある場合のみHubに送信
on:
  push:
    branches: [ main ]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # $GITHUB_WORKSPACE以下のrepoを調べ、ワークフローがアクセスできるようにする
      - name: Check Out Repo
        uses: actions/checkout@v2

      #キャッシュの作成と復元をサポート
      # path: キャッシュを保存するパス
      # key: キャッシュを識別 osの種類-buildx-Githubのハッシュ値
      # restore-keys: キャッシュを復元するキーのパターンマッチ
      # マッチしていればイメージをダウンロードする必要もDockerHubから取得する回数も減る
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # Github container registryにログイン
      - name: Login to Github container registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        # secretsから入手
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # lowercase
      - name: set lower case owner name
        run: |
          echo "OWNER_LC=${OWNER,,}" >>${GITHUB_ENV}
        env:
          OWNER: '${{ github.repository_owner }}'
      
      # Build -> push(構築cacheを利用)
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        env:
          OWNER_LC = ${{ OENER_LC }}
        with:
          context: ./python-docker/
          file: ./python-docker/Dockerfile
          push: true
          tags: ghcr.io/${{ env.OWNER_LC }}/simplewhale:latest
          build-args: BUILDX_BUILDER=image-builder
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
          
    
